/*По данному целому числу N распечатайте все квадраты натуральных чисел, не превосходящие N, в порядке возрастания.*/
#include <iostream>
using namespace std;
int main() {
	int N,i=1;
    cin >> N;
    
    while(i*i<=N){
        
        cout << i*i << " ";
          i++;
    }

				return 0;
			}

/*Дано целое число, не меньшее 2. Выведите его наименьший натуральный делитель, отличный от 1.*/
#include <iostream>
using namespace std;
int main() {
	int N,i=2,min;
    cin >> N;
    
    while(N-N/i*i!=0){
        
          i++;
    }
cout << i;
				return 0;
			}

/*По данному числу N распечатайте все целые степени двойки, не превосходящие N, в порядке возрастания.*/
#include <iostream>
using namespace std;
int main() {
	int N,final=1;
    cin >> N;
    
    while(final<=N){
       
        cout <<  final<<" ";        
        final*=2;
    }

				return 0;
			}

/*Дано натуральное число N. Выведите слово YES, если число N является точной степенью двойки, или слово NO в противном случае.*/
#include <iostream>
using namespace std;
int main() {
	int N,final=1,i;
    cin >> N;
    
    while(N-N/2*2 == 0 && N>2){
       
  N/=2;
    }
    if(N==2||N==1)        
    cout <<"YES ";    
else
    cout <<"NO";    
				return 0;
			}

/*Программа получает на вход последовательность целых неотрицательных чисел, каждое число записано в отдельной строке. Последовательность завершается числом 0, при считывании которого программа должна закончить свою работу и вывести количество членов последовательности (не считая завершающего числа 0).
Числа, следующие за числом 0, считывать не нужно.*/
#include <iostream>
using namespace std;
int main() {
	int N,i=0;
    
    cin >> N; 
    while(N!=0){
    i++;
    cin >> N;
    }
    cout << i;
       
   
				return 0;
			}

/*Определите сумму всех элементов последовательности, завершающейся числом 0.*/
#include <iostream>
using namespace std;
int main() {
	int N,i=0;
    
    cin >> N; 
    while(N!=0){
    i+=N;
    cin >> N;
    }
    cout << i;
       
   
				return 0;
			}

/*Последовательность состоит из натуральных чисел и завершается числом 0. Определите значение наибольшего элемента последовательности.*/
#include <iostream>
using namespace std;
int main() {
	int N,i=0;
    
    cin >> N; 
    while(N!=0){
    if(N>i)
        i=N;
        else{}
    cin >> N;
    }
    cout << i;
       
   
				return 0;
			}

/*Последовательность состоит из натуральных чисел и завершается числом 0. Определите, какое количество элементов этой последовательности, равны ее наибольшему элементу.*/
#include <iostream>
using namespace std;
int main() {
	int N,i=0,j=0;
    
    cin >> N; 
    while(N!=0){
        if(N>i){
            i=N;
            j=1;
        }
        else if(N==i) 
            j++;
            else{}
    cin >> N;
    }
    cout << j;
       
   
				return 0;
			}


/*Последовательность состоит из натуральных чисел и завершается числом 0. Определите значение второго по величине элемента в этой последовательности, то есть элемента, который будет наибольшим, если из последовательности удалить наибольший элемент.*/
#include <iostream>
using namespace std;
int main() {
	int N,i=0,j=0;
    
    cin >> N; 
    while(N!=0){
        if(N>=i){
            j=i;
            i=N;
            
        }
        else if(N>=j){
            j=N;
            
        } else{}
    cin >> N;
    }
    cout << j;
       
   
				return 0;
			}

/*Последовательность Фибоначчи определяется так:
F(0) = 0, F(1) = 1, …, F(n) = F(n−1) + F(n−2).
По данному числу N определите N-е число Фибоначчи F(N).
*/
#include <iostream>
using namespace std;
int main() {
	int N,i=0,j=0,jj=1,jjj;
    
    cin >> N; 
    for (i=1;i<N;i++){
    jjj=jj;
       jj+=j;
       j=jjj;
    }
    cout << jj;
       
   
				return 0;
			}

/*Последовательность Фибоначчи определяется так: 
F(0) = 0, F(1) = 1, …, F(n) = F(n−1) + F(n−2).
Дано натуральное число A. Определите, каким по счету числом Фибоначчи оно является, то есть выведите такое число N, что F(N) = A. Если А не является числом Фибоначчи, выведите число -1.
*/
#include <iostream>
using namespace std;
int main() {
	int N=-1,i=0,A;
    long j=0,jj=1,jjj;
    
    cin >> A; 
    for (i=1;i<=A;i++){
    jjj=jj;
       jj+=j;
       j=jjj;
        if(jj==A){
            cout << i+1;
            N=0;
            break;
        }
    }
    
       if(N!=0) 
           cout << N;
   
				return 0;
			}

/*Дана последовательность натуральных чисел, завершающаяся числом 0. Определите, какое наибольшее число подряд идущих элементов этой последовательности равны друг другу. Если не нашлось ни одной пары, тройки и т.д. элементов, равных друг другу, то программа должна вывести число 1.*/
#include <iostream>
using namespace std;
int main() {
	int N,i=0,j=0,jj=0,ii=1; 
    cin >> N; 
    while(N!=0){
    i=N;
        cin >> N;
        if(i==N){
            ii++;}else { 
            if(ii>jj){
                jj=ii;}else{}
        ii=1;}
    }
    cout << jj;
       
   
				return 0;
			}

/*Элемент последовательности называется локальным максимумом, если он строго больше предыдущего и последующего элемента последовательности. Первый и последний элемент последовательности не являются локальными максимумами.
Дана последовательность натуральных чисел, завершающаяся числом 0. Определите количество строгих локальных максимумов в этой последовательности.
*/
#include <iostream>
using namespace std;
int main() {
	int N,i=0,j=0,jj=0,ii=1; 
    cin >> N; 
    i=N;
    cin >> N; 
    j=N;
     cin >> N;
    while(N!=0){
        if( j>N &&j>i){
            jj++;}else{}
         ii=j;
        j=N;
        i=ii; 
        cin >> N;
       
    }
    cout << jj;
       
   
				return 0;
			}

/*Определите наименьшее расстояние между двумя локальными максимумами последовательности натуральных чисел, завершающейся числом 0. Если в последовательности нет двух локальных максимумов, выведите число 0.
Начальное и конечное значение при этом локальными максимумами не считаются.

Расстоянием считается количество пробелов между элементами. В качестве примера смотрите первый тест.
*/

#include <iostream>
using namespace std;
int main() {
	int N,i=0,j=0,jj=0,ii=1,jjj=0,iii=0,f=0; 
    cin >> N; 
    i=N;
    cin >> N; 
    j=N;
     cin >> N;
    while(N!=0){
        if( j>N &&j>i){
            jj++;
            if(f==1){if(jjj<iii||iii==0){iii=jjj;
                                 jjj=0;}else jjj=0;
                    }
            else{f=1;}
        }else{}
        if(f==1){jjj++;} 
        ii=j;
        j=N;
        i=ii; 
        cin >> N;
       
    }
    cout << iii;
       
   
				return 0;
			}
